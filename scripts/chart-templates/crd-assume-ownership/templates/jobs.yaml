{{- \$currentScope := . -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Chart.Name }}-create
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-rollback
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Chart.Name }}-create
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-manager
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
{{- range \$configMap := (include "crd_manifest_configmaps" . | fromYaml) }}
{{- with \$currentScope }}
        - name: create-crds-{{ get \$configMap "name" }}
          image: {{ template "system_default_registry" . }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          command:
          - /bin/kubectl
          - apply
          - -f
          - /etc/config/crd-manifest/{{ get \$configMap "name" }}
          volumeMounts:
          - name: {{ get \$configMap "name" }}
            readOnly: true
            mountPath: /etc/config/crd-manifest/{{ get \$configMap "name" }}
{{- end }}{{- end }}
      restartPolicy: OnFailure
      volumes:
{{- range \$configMap := (include "crd_manifest_configmaps" . | fromYaml) }}
{{- with \$currentScope }}
      - name: {{ get \$configMap "name" }}
        configMap:
          name: {{ get \$configMap "name" }}
{{- end }}{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Chart.Name }}-delete
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Chart.Name }}-delete
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-manager
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      initContainers:
{{- range \$configMap := (include "crd_manifest_configmaps" . | fromYaml) }}
{{- with \$currentScope }}
        - name: remove-finalzers-{{ get \$configMap "name" }}
          image: {{ template "system_default_registry" . }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          command:
          - /bin/kubectl
          - apply
          - -f
          - /etc/config/crd-manifest/{{ get \$configMap "name" }}
          volumeMounts:
          - name: {{ get \$configMap "name" }}
            readOnly: true
            mountPath: /etc/config/crd-manifest/{{ get \$configMap "name" }}
{{- end }}{{- end }}
      containers:
{{- range \$configMap := (include "crd_manifest_configmaps" . | fromYaml) }}
{{- with \$currentScope }}
        - name: delete-crds-{{ get \$configMap "name" }}
          image: {{ template "system_default_registry" . }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          command:
          - /bin/kubectl
          - delete
          - -f
          - /etc/config/crd-manifest/{{ get \$configMap "name" }}
          volumeMounts:
          - name: {{ get \$configMap "name" }}
            readOnly: true
            mountPath: /etc/config/crd-manifest/{{ get \$configMap "name" }}
{{- end }}{{- end }}
      restartPolicy: OnFailure
      volumes:
{{- range \$configMap := (include "crd_manifest_configmaps" . | fromYaml) }}
{{- with \$currentScope }}
      - name: {{ get \$configMap "name" }}
        configMap:
          name: {{ get \$configMap "name" }}
{{- end }}{{- end }}

